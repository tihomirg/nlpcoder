Note that all variables can be inlined to get expressions. Some times this is not possible, and we will probably need to
keep a little bit more information, like how and where to instantiate those 

For collections and swing it would be good to have another orthogonal Java Model, such that we incorporate variable sequences.

1)

I: Print current date in format "dd/M/yyyy".

O: SimpleDateFormat sdf = new SimpleDateFormat("dd/M/yyyy");
   String date = sdf.format(new Date()); 
   System.out.println(date); //15/10/2013

Or any variation, e.g.: Print the date in format "dd/M/yyyy". Where the date is a name of variable that stores new Data().


2)

I: Transfer (copy) content from the "text1.txt" file to the "text2.txt" file.

O: FileChannel source = new FileInputStream("text1.txt").getChannel();
   FileChannel destination = new FileOutputStream("text2.txt").getChannel();
   destination.transferFrom(source, 0, source.size());
   
//This example is tricky cause variable "source" appears two times in the last line. 
If we save a little bit more info when building Java language model,
e.g. save where a (same) variable appears in a declaration.

   
3)

I: Move the file "Afile.txt" from "C:\\folderA\\" to "C:\\folderB\\" directory.

O: File afile =new File("C:\\folderA\\"+"Afile.txt");
   afile.renameTo(new File("C:\\folderB\\" +"Afile.txt"))

//This one is tricky because of the strings. But we plan to keep data on operators.


4)

I: Parse XML "staff.xml" file.

O: File fXmlFile = new File("staff.xml");
   DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();
   DocumentBuilder dBuilder = dbFactory.newDocumentBuilder();
   Document doc = dBuilder.parse(fXmlFile);
   
5)

I: Create "Ok" button with image "bullet.gif" and add it to the panel.
  
O: JPanel panel = new JPanel();
   JButton jb = new JButton("Ok", new ImageIcon("bullet.gif"));
   
       
6) 

I: Get all files in jar file "filename.jar".

O:  JarFile jf = new JarFile(args[0]);
    Enumeration e = jf.entries();

7) Connect to the address "java.sun.com" via port 80.

    InetAddress addr = InetAddress.getByName("java.sun.com");
    int port = 80;
    SocketAddress sockaddr = new InetSocketAddress(addr, port);

    Socket sock = new Socket();

    int timeoutMs = 2000; // 2 seconds
    sock.connect(sockaddr, timeoutMs);

8) Convert the number to integer.

String number = args[0];
int x = Integer.parseInt(number);

//Or 

String number = args[0];
Integer x = Integer.valueOf(number);

9) Find maximum of two numbers "a" and "b".

int a = 34l;
int b = 243;

int max = Math.max(a,b);

10)

I: Get a field "id" of the class Bean.

O: Bean demo = new Bean();
   Class clazz = demo.getClass();

   Field field = clazz.getField("id");

11) 

I: Add "A", "B" and "C" to array.

O: ArrayList<String> al = new ArrayList<String>();
   al.add("A");
   al.add("B");
   al.add("C");

12) 

I:  Add all elements of the list2 to the list.

O:  List<String> list = new ArrayList<String>();
    list.add("A");
    list.add("B");
    list.add("C");
    List<String> list2 = new ArrayList<String>();
    list2.add("X");
    list2.add("Y");
    list2.add("Z");
    
    list.addAll(list2);

13) 

I:  Log result and class of the "myMethod". 

O:  boolean result = true;
    Logger logger = Logger.getLogger("com.mycompany.MyClass");
    logger.exiting(this.getClass().getName(), "myMethod", new Boolean(result));